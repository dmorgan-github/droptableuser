(
Fdef(\klang, {
	var trig = \trig.tr;
    var sus = \sus.kr(1);
	var gate = Trig1.kr(trig, sus);
	var env = Env.adsr(
		attackTime:\atk.kr(0.01),
		decayTime:\dec.kr(0.3),
		sustainLevel:\suslevel.kr(0.5),
		releaseTime:\rel.kr(1),
		curve:\curve.kr(-4)
	).kr(gate:gate);

	var freq = Vibrato.kr(\freq.kr(432).lag(\lag.kr(0.0)), \vrate.kr(6), \vdepth.kr(0.0));
	var detune = \dtune.kr(4.4);
	var sig = {
		var width = \width.kr(0.5);
		var sig = {
			var dt = LFNoise2.kr(\dtunedepth.kr(5)).range(detune.neg, detune);
			DynKlang.ar(`[Array.fill(4, {rrand(4.0, 8.0)}),nil,nil], freq + dt);
		}.dup(2);
		sig;
	};

	var noise = {
		PinkNoise.ar * \noise.kr(0.0);
	};

	var sub = {
		SinOsc.ar(freq) * \sub.kr(1);
	};

	sig = sig.() + noise.() + sub.();

	sig = sig * env * AmpCompA.kr(freq) * \amp.kr(-3.dbamp);

	sig = Splay.ar(sig, \spread.kr(1), center:\center.kr(0));

	sig;
});
Ndef(\klang)[0] = Fdef(\klang);
)



Ndef(\klang_mix)[0] = \mix -> {Ndef(\klang).ar};

(Ndef(\klang_mix).filter(10, {arg in;
	var sig = in;
	sig = NHHall.ar(sig, 3);
	sig;
}).set(\wet10, 0.3))

(
Pdef(\klang, {
	
	var klang = Ndef(\klang);
	var mix = Ndef(\klang_mix);
	if (mix.isMonitoring.not) {
		klang.stop;
		mix.play;
	};
	
	Pbind(
		\type, \set,
		\id, Pfunc({klang.nodeID}),
		\args, #[\freq, \sus, \rel, \trig, \amp],
		\degree, Pwhite(0, 4),
		\dur, Pseq(0.25!8 ++ [14], inf) * 0.5,
		\octave, 6,
		\sus, 0.1,
		\rel, 0.1,
		\trig, 1,
		\amp, -25.dbamp,
		\timingOffset, 2.5
	)
})
)


Pdef(\klang).play;
Pdef(\klang).stop;